[project]
name = "project-reunite"
version = "0.0.1"
description = "Project Reunite is a humanitarian AI system designed to help reunite missing persons, disaster survivors, and refugees with their families."
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "alembic>=1.13.2",
    "asyncpg>=0.30.0",
    "cachetools>=5.5.0",
    "click>=8.1.7",
    "fastapi>=0.114.2",
    "fastapi-sessions>=0.3.2",
    "granian[reload]>=1.6.0",
    "greenlet>=3.1.0",
    "httpx>=0.27.2",
    "hypercorn>=0.17.3",
    "loguru>=0.7.2",
    "paramiko>=3.5.0",
    "psycopg>=3.2.2",
    "pydantic[email]>=2.9.1",
    "pydantic-settings>=2.5.2",
    "pyjwt>=2.9.0",
    "python-multipart>=0.0.9",
    "requests>=2.32.3",
    "setuptools>=75.1.0",
    "slowapi>=0.1.9",
    "sqlalchemy>=2.0.35",
    "tabulate>=0.9.0",
    "psutil>=6.1.0",
    "pytest>=8.3.3",
    "stripe>=11.3.0",
    "pytest-asyncio>=0.24.0",
    "pytest-mock>=3.14.0",
]

[tool.uv]
dev-dependencies = [
    "coverage>=7.6.1",
    "isort>=5.13.2",
    "pre-commit>=3.8.0",
    "pytest>=8.3.3",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=5.0.0",
    "pytest-env>=1.1.4",
    "pytest-richer>=0.1.1",
    "ruff>=0.6.5",
    "pyright>=1.1.380",
]
package = true

[tool.pyright]
exclude = ["tests", ".venv", "alembic"]

[tool.pytest.ini_options]
python_files = "tests.py test_*.py *_tests.py"
asyncio_default_fixture_loop_scope = "function"
addopts = "-ra -q --rich"
testpaths = [
    "tests",
]
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
    "ignore:.*unclosed.*:ResourceWarning",
]

[tool.coverage.run]
omit = [
    "tests/*"
]
relative_files = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "class .*\\(.*\\bProtocol\\b.*\\):",
    "@(?:typing\\.)?overload",
    "if TYPE_CHECKING:",
    "raise NotImplementedError"
]
omit = [
    "tests/*",
    "alembic/*",
]
show_missing = true
skip_covered = true
skip_empty = true
precision = 90
